@model Customer
@using DominosPizza.Models

@{
    Layout = null;
}
<!-- start: page -->
<div class="row">
    <div class="center-sign">
        <section class="panel">
            <header class="panel-heading">
                <h2 class="panel-title">Смена пароля</h2>
                <p class="panel-subtitle">
                    Вы хотите сменить пароль для пользователя @User.Identity.Name, введите новый пароль в поля для ввода.
                </p>
            </header>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.CustomerId)
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="panel-body">
                    <form class="form-inline">
                        <div class="form-group col-sm-4">
                            <label class="sr-only">Пароль</label>
                            @Html.EditorFor(model => model.CustomerPassword, new { htmlAttributes = new { @class = "form-control", PlaceHolder = "Password" } })
                            @Html.ValidationMessageFor(model => model.CustomerPassword, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-sm-4">
                            <label class="sr-only">Подтверждение пароля</label>
                            @Html.EditorFor(model => model.CustomerPasswordConfirm, new { htmlAttributes = new { @class = "form-control", PlaceHolder = "Confirm Password" } })
                            @Html.ValidationMessageFor(model => model.CustomerPasswordConfirm, "", new { @class = "text-danger" })
                        </div>

                        <div class="visible-sm clearfix mt-sm mb-sm"></div>

                        <button type="submit" class="btn btn-primary">Сменить</button>
                        <button type="button" class="btn btn-default" onclick="history.back();">Отмена</button>
                    </form>
                </div>
            }
        </section>
    </div>
</div>
    var customer = new Customer();
    Layout = "~/Views/Crmpanel/_LayoutKitchen.cshtml";
    switch (customer.CustomerRoleId)
    {
        case 2:
            Layout = "~/Views/Crmpanel/_LayoutManage.cshtml";
            break;
        case 3:
            Layout = "~/Views/Crmpanel/_LayoutManager.cshtml";
            break;
        case 4:
            Layout = "~/Views/Crmpanel/_LayoutKitchen.cshtml";
            break;
        case 5:
            Layout = "~/Views/Crmpanel/_LayoutDelivery.cshtml";
            break;
        default:
            Layout = "~/Views/Shared/_Layout.cshtml";
            break;
    }
}
